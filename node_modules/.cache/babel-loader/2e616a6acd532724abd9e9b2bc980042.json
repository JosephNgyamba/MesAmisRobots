{"ast":null,"code":"var _jsxFileName = \"/home/joseph/Documents/newprojet/src/components/Robot.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\"; // import { useNavigate } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Robots() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  useEffect(() => {\n    const fecthItem = async () => {\n      setLoading(true);\n      const results = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n      setItems(results.data);\n      setLoading(false);\n    };\n\n    fecthItem();\n  }, []);\n  console.log(searchTitle);\n  console.log(items.filter(element => element.name.toLowerCase().includes(searchTitle.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"recherche par nom\",\n        onChange: e => setSearchTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"loading ?...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : items.filter(element => {\n        if (searchTitle.trim().length <= 3) {\n          return element;\n        } else if (element.name.toLowerCase().includes(searchTitle.trim().toLowerCase())) {\n          return element;\n        } else if (searchTitle === \"\") {\n          return element;\n        }\n      }).map(elt => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"robot-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"robot-img\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://robohash.org/${elt.id}`,\n            width: \"150px\",\n            alt: \"robot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: elt.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: elt.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, elt.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Robots, \"Pyb1NHFaJx/L801lm87dNmt2VAM=\");\n\n_c = Robots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Robots\");","map":{"version":3,"names":["useEffect","useState","axios","Robots","loading","setLoading","items","setItems","searchTitle","setSearchTitle","fecthItem","results","get","data","console","log","filter","element","name","toLowerCase","includes","e","target","value","trim","length","map","elt","id","email"],"sources":["/home/joseph/Documents/newprojet/src/components/Robot.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nexport default function Robots() {\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  useEffect(() => {\n    const fecthItem = async () => {\n      setLoading(true);\n      const results = await axios.get(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n      setItems(results.data);\n      setLoading(false);\n    };\n\n    fecthItem();\n  }, []);\n  console.log(searchTitle);\n  console.log(\n    items.filter((element) =>\n      element.name.toLowerCase().includes(searchTitle.toLowerCase())\n    )\n  );\n  return (\n    <>\n      <div className=\"content\">\n        <input\n          type=\"text\"\n          placeholder=\"recherche par nom\"\n          onChange={(e) => setSearchTitle(e.target.value)}\n        />\n\n        {loading ? (\n          <h4>loading ?...</h4>\n        ) : (\n          items\n            .filter((element) => {\n              if (searchTitle.trim().length <= 3) {\n                return element;\n              } else if (\n                element.name\n                  .toLowerCase()\n                  .includes(searchTitle.trim().toLowerCase())\n              ) {\n                return element;\n              } else if (searchTitle === \"\") {\n                return element;\n              }\n            })\n            .map((elt) => (\n              <div className=\"robot-grid\" key={elt.id}>\n                <div className=\"robot-img\">\n                  <img\n                    src={`https://robohash.org/${elt.id}`}\n                    width=\"150px\"\n                    alt=\"robot\"\n                  ></img>\n                  <p>{elt.name}</p>\n                  <p>{elt.email}</p>\n                </div>\n              </div>\n            ))\n        )}\n      </div>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAC/B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,YAAY;MAC5BL,UAAU,CAAC,IAAD,CAAV;MACA,MAAMM,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CACpB,4CADoB,CAAtB;MAGAL,QAAQ,CAACI,OAAO,CAACE,IAAT,CAAR;MACAR,UAAU,CAAC,KAAD,CAAV;IACD,CAPD;;IASAK,SAAS;EACV,CAXQ,EAWN,EAXM,CAAT;EAYAI,OAAO,CAACC,GAAR,CAAYP,WAAZ;EACAM,OAAO,CAACC,GAAR,CACET,KAAK,CAACU,MAAN,CAAcC,OAAD,IACXA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCZ,WAAW,CAACW,WAAZ,EAApC,CADF,CADF;EAKA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,mBAFd;QAGE,QAAQ,EAAGE,CAAD,IAAOZ,cAAc,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;MAHjC;QAAA;QAAA;QAAA;MAAA,QADF,EAOGnB,OAAO,gBACN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADM,GAGNE,KAAK,CACFU,MADH,CACWC,OAAD,IAAa;QACnB,IAAIT,WAAW,CAACgB,IAAZ,GAAmBC,MAAnB,IAA6B,CAAjC,EAAoC;UAClC,OAAOR,OAAP;QACD,CAFD,MAEO,IACLA,OAAO,CAACC,IAAR,CACGC,WADH,GAEGC,QAFH,CAEYZ,WAAW,CAACgB,IAAZ,GAAmBL,WAAnB,EAFZ,CADK,EAIL;UACA,OAAOF,OAAP;QACD,CANM,MAMA,IAAIT,WAAW,KAAK,EAApB,EAAwB;UAC7B,OAAOS,OAAP;QACD;MACF,CAbH,EAcGS,GAdH,CAcQC,GAAD,iBACH;QAAK,SAAS,EAAC,YAAf;QAAA,uBACE;UAAK,SAAS,EAAC,WAAf;UAAA,wBACE;YACE,GAAG,EAAG,wBAAuBA,GAAG,CAACC,EAAG,EADtC;YAEE,KAAK,EAAC,OAFR;YAGE,GAAG,EAAC;UAHN;YAAA;YAAA;YAAA;UAAA,QADF,eAME;YAAA,UAAID,GAAG,CAACT;UAAR;YAAA;YAAA;YAAA;UAAA,QANF,eAOE;YAAA,UAAIS,GAAG,CAACE;UAAR;YAAA;YAAA;YAAA;UAAA,QAPF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF,GAAiCF,GAAG,CAACC,EAArC;QAAA;QAAA;QAAA;MAAA,QAfJ,CAVJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA2CD;;GAjEuBzB,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}